"""added comment, share, updated like to be polymorphic

Revision ID: ab9bfab7d17e
Revises: fab101a208b4
Create Date: 2025-05-24 16:26:04.644232

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ab9bfab7d17e'
down_revision = 'fab101a208b4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('share',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('like', schema=None) as batch_op:
        batch_op.add_column(sa.Column('comment_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('share_id', sa.Integer(), nullable=True))
        batch_op.alter_column('post_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_constraint('unique_like', type_='unique')
        batch_op.create_unique_constraint('uq_user_comment_like', ['user_id', 'comment_id'])
        batch_op.create_unique_constraint('uq_user_post_like', ['user_id', 'post_id'])
        batch_op.create_unique_constraint('uq_user_share_like', ['user_id', 'share_id'])
        batch_op.drop_constraint('like_post_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('like_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'comment', ['comment_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'share', ['share_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'post', ['post_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('like', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('like_user_id_fkey', 'user', ['user_id'], ['id'])
        batch_op.create_foreign_key('like_post_id_fkey', 'post', ['post_id'], ['id'])
        batch_op.drop_constraint('uq_user_share_like', type_='unique')
        batch_op.drop_constraint('uq_user_post_like', type_='unique')
        batch_op.drop_constraint('uq_user_comment_like', type_='unique')
        batch_op.create_unique_constraint('unique_like', ['user_id', 'post_id'], postgresql_nulls_not_distinct=False)
        batch_op.alter_column('post_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('share_id')
        batch_op.drop_column('comment_id')

    op.drop_table('share')
    op.drop_table('comment')
    # ### end Alembic commands ###
